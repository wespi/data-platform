# =======================================================================
# Platform Name            data-platform
# Platform Stack:          trivadis/platys-modern-data-platform
# Platform Stack Version:  1.14.0
# =======================================================================
version: '3.5'
networks:
  default:
    name: data-platform
# backward compatiblity to platform < 1.14.0
# Enable PostgreSQL or MySQL for MLflow server
services:
  #  ================================== Jupyter ========================================== #
  jupyter:
    image: jupyter/minimal-notebook:latest
    container_name: jupyter
    hostname: jupyter
    labels:
      com.platys.name: jupyter
      com.platys.webui.title: Jupyter UI
      com.platys.webui.url: http://${PUBLIC_IP}:28888
    ports:
      - 28888:8888
    environment:
      JUPYTER_ENABLE_LAB: 'true'
      JUPYTER_TOKEN: abc123!
      GRANT_SUDO: 'true'
      TINI_SUBREAPER: 'true'
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  #  ================================== MongoDB ========================================== #
  mongo-1:
    image: mongo:5.0
    container_name: mongo-1
    hostname: mongo-1
    labels:
      com.platys.name: mongodb
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=sample
      - MONGO_INITDB_USERNAME=admin
      - MONGO_INITDB_PASSWORD=admin
    volumes:
      - ./data-transfer:/data-transfer
      # seeding scripts
      - ./conf/mongo-entrypoint:/docker-entrypoint-initdb.d
    restart: unless-stopped
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    hostname: mongo-express
    labels:
      com.platys.name: mongo-express
      com.platys.webui.title: Mongo Express UI
      com.platys.webui.url: http://${PUBLIC_IP}:28123
    ports:
      - 28123:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo-1
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  admin-mongo:
    image: adicom/admin-mongo:latest
    container_name: admin-mongo
    hostname: admin-mongo
    labels:
      com.platys.name: admin-mongo
      com.platys.webui.title: Admin Mongo UI
      com.platys.webui.url: http://${PUBLIC_IP}:28124
    ports:
      - 28124:1234
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
     #  ================================== Neo4J ========================================== #
  neo4j-1:
    image: neo4j:4.4
    hostname: neo4j-1
    container_name: neo4j-1
    labels:
      com.platys.name: neo4j
      com.platys.webui.title: Neo4J UI
      com.platys.webui.url: http://${PUBLIC_IP}:7474
    ports:
      - 7474:7474
      - 7687:7687
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_HEAP_MEMORY=2048
      - NEO4J_CACHE_MEMORY=1G
      - NEO4J_AUTH=neo4j/abc123!
    volumes:
      - ./data-transfer:/data-transfer
#      - "./conf/neo4j/neo4j.conf:/conf/neo4j.conf"
      - ./plugins/neo4j/:/plugins
    restart: unless-stopped
  #  ================================== Wetty ========================================== #
  wetty:
    image: svenihoney/wetty:latest
    container_name: wetty
    hostname: wetty
    labels:
      com.platys.name: wetty
      com.platys.webui.title: WeTTY UI
      com.platys.webui.url: http://${PUBLIC_IP}:3001
    ports:
      - 3001:3000
    environment:
      - REMOTE_SSH_SERVER=${DOCKER_HOST_IP}
      - REMOTE_SSH_PORT=22
      - REMOTE_SSH_USER=
      - WETTY_PORT=3000
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  #  ================================== python ========================================== #
  python-1:
    image: python:3.8.1-alpine3.11
    container_name: python-1
    hostname: python-1
    labels:
      com.platys.name: python
    volumes:
      - ./data-transfer:/data-transfer
      - ./scripts/python/run_pip_and_python.sh:/app/run_pip_and_python.sh:ro
    command: [/app/run_pip_and_python.sh, /tmp/]
    restart: unless-stopped
  #  ================================== markdown-viewer ========================================== #
  markdown-viewer:
    image: trivadis/markdown-web:latest
    container_name: markdown-viewer
    hostname: markdown-viewer
    labels:
      com.platys.name: markdown-viewer
      com.platys.webui.title: Markdown Viewer UI
      com.platys.webui.url: http://${PUBLIC_IP}:80
    ports:
      - 80:80
    volumes:
      - ./artefacts:/home/python/markdown
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  markdown-renderer:
    image: trivadis/jinja2-renderer:latest
    container_name: markdown-renderer
    hostname: markdown-renderer
    labels:
      com.platys.name: markdown-renderer
    environment:
      USE_PUBLIC_IP: 'True'
      PUBLIC_IP: ${PUBLIC_IP}
      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
      DATAPLATFORM_HOME: ${DATAPLATFORM_HOME}
      PLATYS_PLATFORM_NAME: data-platform
      PLATYS_PLATFORM_STACK: trivadis/platys-modern-data-platform
      PLATYS_PLATFORM_STACK_VERSION: 1.14.0
      PLATYS_COPY_COOKBOOK_DATA: 'True'
    volumes:
      - ./artefacts/templates:/templates
      - ./artefacts/templates:/scripts
      - .:/variables
      - ./artefacts:/output
      - ./data-transfer:/data-transfer
